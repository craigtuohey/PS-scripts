# Script to enable Windows Defender ExploitGuard settings for specified application
# you need to manually add application to ExploitGuard first before running script
# Depending on target application, these settings may break stuff so use at your own risk
# Settings stored in @Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\

function EnableProtections($targetapp)
{
    # Enable protections
    Write-Host "Enabling mitigations"
    Set-ProcessMitigation -Name $targetapp -Enable MicrosoftSignedOnly
    Set-ProcessMitigation -name $targetapp -Enable EnableRopCallerCheck
    Set-ProcessMitigation -Name $targetapp -Enable EnableExportAddressFilterPlus -EAFModules kernel32.dll,ntdll32.dll,user32.dll
    Set-ProcessMitigation -Name $targetapp -Enable EnableExportAddressFilter
    Set-ProcessMitigation -Name $targetapp -Enable EnableRopCallerCheck
    Set-ProcessMitigation -Name $targetapp -Enable EnableRopSimExec
    Set-ProcessMitigation -Name $targetapp -Enable EnableRopStackPivot
    Set-ProcessMitigation -Name $targetapp -Enable EnableImportAddressFilter
    Set-ProcessMitigation -Name $targetapp -Enable SEHOP
    Set-ProcessMitigation -Name $targetapp -Enable BlockRemoteImageLoads
    Set-ProcessMitigation -Name $targetapp -Enable DisallowChildProcessCreation
    Set-ProcessMitigation -Name $targetapp -Enable DisableNonSystemFonts
    Set-ProcessMitigation -Name $targetapp -Enable DisableExtensionPoints
    Set-ProcessMitigation -Name $targetapp -Enable BottomUp
    Set-ProcessMitigation -Name $targetapp -Enable ForceRelocateImages
    Set-ProcessMitigation -Name $targetapp -Enable TerminateOnError
    Set-ProcessMitigation -Name $targetapp -Enable StrictHandle
    Set-ProcessMitigation -Name $targetapp -Enable EnforceModuleDependencySigning
    Set-ProcessMitigation -Name $targetapp -Enable StrictHandle
    Set-ProcessMitigation -Name $targetapp -Enable CFG

 
    # This setting breaks office
    #Set-ProcessMitigation -Name $targetapp -Enable SystemCall
    #Set-ProcessMitigation -Name $targetapp -Enable AuditSystemCall

    #Set-ProcessMitigation -Name $targetapp -Enable CFG
    #Set-ProcessMitigation -Name $targetapp -Enable BlockDynamicCode
    #Set-ProcessMitigation -Name $targetapp -Enable StrictCFG

    return
}

function EnableAuditing($targetapp)
{
	Write-Host "Enabling available auditing"
	
    Set-ProcessMitigation -Name $targetapp -Enable AuditEnableRopCallerCheck
    Set-ProcessMitigation -Name $targetapp -Enable AuditRemoteImageLoads
    Set-ProcessMitigation -Name $targetapp -Enable AuditLowLabelImageLoads
    Set-ProcessMitigation -Name $targetapp -Enable AuditEnableExportAddressFilterPlus
    Set-ProcessMitigation -Name $targetapp -Enable AuditEnableExportAddressFilter
    Set-ProcessMitigation -Name $targetapp -Enable AuditEnableRopCallerCheck
    Set-ProcessMitigation -Name $targetapp -Enable AuditEnableImportAddressFilter
    Set-ProcessMitigation -Name $targetapp -Enable AuditEnableRopSimExec
    Set-ProcessMitigation -Name $targetapp -Enable AuditEnableRopStackPivot
    Set-ProcessMitigation -Name $targetapp -Enable AuditSEHOP
    return
}

$targetapp = $args[0]

EnableProtections $targetapp
EnableAuditing $targetapp
Write-Host "Complete!"
